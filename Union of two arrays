public static ArrayList<Integer> findUnion(int arr1[], int arr2[], int n, int m)
    {
        // add your code here
        ArrayList<Integer> list=new ArrayList<>();
        int i=0,j=0;
        while(i<n && j<m){
            if(arr1[i]==arr2[j]){
                if(list.size()>0&&list.get(list.size()-1)!=arr1[i]){
                list.add(arr1[i]);
            }
                else if(list.size()==0){
                    list.add(arr1[i]);
                    
                }
                i++;
            }
            
            else if(arr1[i]<arr2[j]){
                if(list.size()>0&&list.get(list.size()-1)!=arr1[i]){
                list.add(arr1[i]);
                }
                else if(list.size()==0){
                    list.add(arr1[i]);
                    
                }
                i++;
            }
            else{
                if(list.size()>0&&list.get(list.size()-1)!=arr2[j]){
                list.add(arr2[j]);
                }
                else if(list.size()==0){
                    list.add(arr2[j]);
                }
                j++;
                

            }
            
             }
             //when only eelements in 1 array is remaining
        while(i<n){
            if(list.get(list.size()-1)!=arr1[i]){
                list.add(arr1[i]);
                
            }
            i++;
            
        }
        //when elements in 2 array are remaining
        while(j<m){
             if(list.get(list.size()-1)!=arr2[j]){
                list.add(arr2[j]);
                
            }
            j++;
            
        }
        
         return list;
    }
}

